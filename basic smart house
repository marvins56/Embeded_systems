
#define LEDPin 2 // Onboard LED
#define LEDPin2 3 // Onboard LED
#define fan 12 // Onboard LED
#define smokefan 11
#define buzzer 5
#define sensorPin A0

const int pingPin = 6; // Trigger Pin of Ultrasonic Sensor
const int echoPin = 7; // Echo Pin of Ultrasonic Sensor
const int pingPin2 = 10; // Trigger Pin of Ultrasonic Sensor
const int echoPin2 = 9; // Echo Pin of Ultrasonic Sensor

void setup() {
digitalWrite(13,LOW);

  Serial.begin(9600);
  pinMode(buzzer, OUTPUT);
  digitalWrite(buzzer, LOW);
  pinMode(13,OUTPUT);
  
  pinMode(LEDPin,OUTPUT);
  pinMode(LEDPin2,OUTPUT);
  pinMode(12,OUTPUT);

   Serial.begin(9600); // Starting Serial Terminal
}

void loop() {
readSensor();

   long duration2,duration, inches2,inches, cm,cm2;
   pinMode(pingPin, OUTPUT);
   pinMode(pingPin2, OUTPUT);
   
   digitalWrite(pingPin, LOW);
      digitalWrite(pingPin2, LOW);

   delayMicroseconds(2);
   digitalWrite(pingPin, HIGH);
   digitalWrite(pingPin2, HIGH);
   
   delayMicroseconds(10);
   digitalWrite(pingPin, LOW);
   digitalWrite(pingPin2, LOW);
   
   pinMode(echoPin, INPUT);
   pinMode(echoPin2, INPUT);
   
   duration = pulseIn(echoPin, HIGH);
  duration2 = pulseIn(echoPin2, HIGH);

   inches = microsecondsToInches(duration);
    inches2 = microsecondsToInches(duration2);

   cm = microsecondsToCentimeters(duration);
   cm2 = microsecondsToCentimeters(duration2);
 //outside lights  
if(cm <= 20) {
  
  digitalWrite(LEDPin,HIGH);

if (millis() % 5000 < 100) { // Trigger sound for a short duration every 5 seconds
    generateSound(1000);
  }

}
else if(cm >= 21 && cm <= 40 ) {

digitalWrite(LEDPin,HIGH);
digitalWrite(buzzer,LOW);

}

else{
  
digitalWrite(LEDPin,LOW);
digitalWrite(buzzer,LOW);

}

      Serial.println(cm2);

//inside 
if(cm2 <= 10) {
  
  digitalWrite(LEDPin2,HIGH);
  digitalWrite(fan,HIGH);
  digitalWrite(smokefan,HIGH);
}

else{
  
digitalWrite(LEDPin2,LOW);
  digitalWrite(fan,LOW);
  digitalWrite(smokefan,LOW);
}
      
      // Serial.print("Analog output: ");
      // Serial.println(readSensor());
}


long microsecondsToInches(long microseconds) {
   return microseconds / 74 / 2;
}

void generateSound(int durationMs) {
  digitalWrite(buzzer, HIGH); // Sound
  delay(durationMs);
  digitalWrite(buzzer, LOW); // Not sound
  delay(durationMs);
}
long microsecondsToCentimeters(long microseconds) {
   return microseconds / 29 / 2;
}

//  This function returns the analog data to calling function
int readSensor() {
  unsigned int sensorValue = analogRead(sensorPin);  // Read the analog value from sensor
  unsigned int outputValue = map(sensorValue, 0, 1023, 0, 255); // map the 10-bit data to 8-bit data
  if (outputValue > 65)
  {
    analogWrite(buzzer, outputValue); 
    digitalWrite(smokefan,HIGH);// generate PWM signal
    
  }
    
  else{
        digitalWrite(buzzer, LOW);
        digitalWrite(smokefan,LOW);    
  }
    
  return outputValue;             // Return analog moisture value
}
